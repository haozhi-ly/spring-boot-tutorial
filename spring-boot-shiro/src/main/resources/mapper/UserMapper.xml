<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ly.dao.UserMapper" >

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ly.entity.User" >
    insert into user (id, username, `password`, 
      salt, email, mobile, 
      `status`, has_delete, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{hasDelete,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.ly.entity.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      has_delete = #{hasDelete,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, username, `password`, salt, email, mobile, `status`, has_delete, create_time
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>

  <resultMap id="BaseResultMap" type="com.ly.entity.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="has_delete" property="hasDelete" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <collection property="roleList" column="urid" ofType="Role" javaType="ArrayList">
        <id column="rid" property="id"/>
        <result column="role_name" property="roleName"/>
    </collection>

  </resultMap>

  <select id="selectAll" resultMap="BaseResultMap" >
    select u.*,r.id rid,r.role_name
    from user u,user_role ur,role r
    <where>
        u.id = ur.user_id and r.id = ur.role_id
        <if test="username !=null and username !=''">
         and  username = #{username}
        </if>

        <if test="password !=null and password !=''">
          and  password = #{password}
        </if>
    </where>
  </select>

</mapper>